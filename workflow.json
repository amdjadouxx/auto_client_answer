{
  "name": "auto_answer",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "filters": {
          "readStatus": "unread"
        }
      },
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1.2,
      "position": [
        -1820,
        -140
      ],
      "id": "e95d4bd5-3ff3-4ece-8050-582be1ccffa4",
      "name": "Gmail Trigger",
      "credentials": {
        "gmailOAuth2": {
          "id": "iwICIT10mcOTvPzn",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "markAsRead",
        "messageId": "={{$node[\"Gmail Trigger\"].json[\"id\"]}}"
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -1160,
        260
      ],
      "id": "040bf1bf-092c-4c6e-847c-148e9e4cc8ad",
      "name": "Mark Email as Read",
      "webhookId": "78995c35-6b2d-436b-a2cb-a389f9f6f19d",
      "retryOnFail": true,
      "alwaysOutputData": false,
      "credentials": {
        "gmailOAuth2": {
          "id": "iwICIT10mcOTvPzn",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "1u-KMq01ptKLcv2Rhn0gNlSifDI2p1cFC",
          "mode": "list",
          "cachedResultName": "",
          "cachedResultUrl": ""
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -940,
        185
      ],
      "id": "c4d8ac9c-6c94-4660-8495-76aba248758e",
      "name": "Download emergency words",
      "retryOnFail": true,
      "alwaysOutputData": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "jbsG7GKWiqhAuWXs",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "16O4icCuR6jyegS2FosOptb--jCxUwI_u",
          "mode": "list",
          "cachedResultName": "",
          "cachedResultUrl": ""
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -940,
        385
      ],
      "id": "563d187c-98ec-44db-9825-598f25db88ed",
      "name": "Download Rules",
      "retryOnFail": true,
      "alwaysOutputData": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "jbsG7GKWiqhAuWXs",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "fromJson",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -720,
        185
      ],
      "id": "f16789fc-5ad8-4684-9049-f885f70a4534",
      "name": "Extract from Emergency",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "operation": "fromJson",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -720,
        385
      ],
      "id": "27d54946-7194-4929-a904-0302ec9cbd13",
      "name": "Extract from Rules",
      "alwaysOutputData": true,
      "retryOnFail": true
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        -500,
        -100
      ],
      "id": "23d2ac32-53e7-4707-978c-3f62a4734442",
      "name": "Merge"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "34843154-ee72-406d-b41c-d1bad5e3bfd1",
              "leftValue": "={{ $json.From }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1380,
        110
      ],
      "id": "92b39e28-8bf8-4f91-8ccc-acb41744cb5f",
      "name": "If resend by me",
      "retryOnFail": true,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0de4cc33-ec4a-46e4-8677-1826ff042ade",
              "leftValue": "={{ $json.snippet }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1600,
        -140
      ],
      "id": "716e1c1b-ecdb-4fea-a8d8-86b210c8b26c",
      "name": "If empty"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4",
          "mode": "list",
          "cachedResultName": "GPT-4"
        },
        "messages": {
          "values": [
            {
              "content": "={{ $json.prompt }}"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -80,
        -100
      ],
      "id": "deb12dea-dca1-456e-98f1-a5ef07ec522c",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "2k6CnGvxGepgP6vD",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "markAsRead",
        "messageId": "={{$node[\"Gmail Trigger\"].json[\"id\"]}}"
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -1380,
        -280
      ],
      "id": "f148d1c2-b90a-4e12-9212-9d4720fbcaeb",
      "name": "Mark Email as Read when empty",
      "webhookId": "78995c35-6b2d-436b-a2cb-a389f9f6f19d",
      "retryOnFail": true,
      "alwaysOutputData": false,
      "credentials": {
        "gmailOAuth2": {
          "id": "iwICIT10mcOTvPzn",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1160,
        60
      ],
      "id": "7dc806b9-6104-40f6-8fb3-22916dc6db3f",
      "name": "Email cannot be process"
    },
    {
      "parameters": {
        "from": "",
        "to": "",
        "toWhatsapp": true,
        "message": "={{ $json.whatsapp }}",
        "options": {}
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        540,
        -100
      ],
      "id": "1fe53b21-afbd-4fa7-9a44-e6517f808e2b",
      "name": "Twilio",
      "credentials": {
        "twilioApi": {
          "id": "66WTv6bf3lnV3Efm",
          "name": "Twilio account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nconst email = items[0].json;\nconst urgentThemes = items[1].json.data || [];\n\nconst data3 = items[2].json.data;\nconst lines = Array.isArray(data3?.lines) ? data3.lines : Array.isArray(data3) ? data3 : [];\nconst buildingRulesText = lines.join('\\n');\n\nconst emailSnippet = email.snippet || '';\nconst emailTitle = email.Subject || '';\nconst emailFrom = email.From || '';\n\nconst prompt = `\nTu es une intelligence artificielle sp√©cialis√©e en gestion locative. Tu assistes un gestionnaire immobilier √† r√©ceptionner et analyser les emails des locataires afin de r√©diger un brouillon de r√©ponse clair, professionnel et pr√™t √† l‚Äôenvoi.\n\n‚ö†Ô∏è Important : l‚ÄôIA ne prend aucune action ni intervention. Toute action, y compris l‚Äôenvoi d‚Äôun accus√© de r√©ception ou de toute communication, est r√©serv√©e au g√©rant. L‚ÄôIA pr√©pare uniquement le brouillon de mail et un message WhatsApp d‚Äôexplication √† destination du g√©rant. Le mail g√©n√©r√© est un **brouillon**, pr√™t √† √™tre relu et envoy√© par le g√©rant.  \nL‚ÄôIA ne doit jamais indiquer qu‚Äôun mail a √©t√© envoy√© ou qu‚Äôune intervention a √©t√© r√©alis√©e.\n\nüéØ Objectif : analyser l‚Äôemail d‚Äôun locataire, d√©tecter les probl√®mes (urgents ou non), et g√©n√©rer :  \n- un brouillon d‚Äôemail de r√©ponse clair, respectueux et pr√™t √† l‚Äôenvoi  \n- un message WhatsApp √† envoyer au g√©rant, expliquant bri√®vement la situation, sans sugg√©rer que l‚ÄôIA agit, mais pr√©cisant que le g√©rant doit g√©rer la suite\n\n---\n\nüìö Donn√©es fournies :\n\n1) Liste des th√®mes d'urgence √† surveiller (exemples : fuite, panne, incendie) :  \n${urgentThemes.map(t => `- ${t}`).join('\\n')}\n\n2) Extraits du r√®glement de l‚Äôimmeuble :  \n${buildingRulesText}\n\n3) Email re√ßu :  \nSujet : \"${emailTitle}\"  \nExp√©diteur : \"${emailFrom}\"  \nContenu : \"${emailSnippet}\"\n\n---\n\nüß† Ton r√¥le :\n\nAnalyser les donn√©es ci-dessus et g√©n√©rer un objet JSON contenant les 4 champs suivants :\n\n{\n  \"email\": \"adresse email du locataire (reprise telle quelle)\",\n  \"subject\": \"objet complet du mail de r√©ponse (pr√™t √† l‚Äôenvoi)\",\n  \"message\": \"corps complet du mail de r√©ponse, bien format√© avec paragraphes et sauts de ligne, ton professionnel et empathique, sans placeholders ni contenu √† compl√©ter manuellement\",\n  \"whatsapp\": \"message court et clair √† envoyer au g√©rant, contenant :\\n  - l‚Äôadresse email du locataire\\n  - le probl√®me exprim√© par le locataire (en une phrase)\\n  - ce que contient le mail de r√©ponse (en une phrase)\\n  - une mention explicite que le g√©rant doit prendre la suite\\n  - format√© proprement avec des retours √† la ligne\"\n}\n\n---\n\nüßæ Contraintes √† respecter :\n\n- Toujours g√©n√©rer les 4 champs du JSON, m√™me si l‚Äôemail du locataire est incomplet  \n- Le message email doit √™tre professionnel, empathique et bien structur√© (paragraphes, retours √† la ligne)  \n- En cas d‚Äôurgence possible, rappeler que des frais peuvent s‚Äôappliquer selon le r√®glement (section 2)  \n- Le message WhatsApp doit toujours inclure l‚Äôemail du locataire, √™tre clair, neutre, et ne jamais indiquer que l‚ÄôIA prend une quelconque action  \n- En particulier, ne jamais dire que \"j‚Äôai envoy√©\", \"nous avons inform√©\", ou toute autre phrase laissant penser que l‚ÄôIA agit  \n- Toute action (y compris l‚Äôenvoi d‚Äôun accus√© de r√©ception) est r√©serv√©e au g√©rant  \n- Ne jamais inclure de champs √† remplir manuellement (ex. : [NOM], [DATE]) ni instructions dans le texte  \n- Ne jamais divulguer d‚Äôinformations sensibles ou faire de supposition non fond√©e  \n- Si le cas est complexe, r√©dige un mail clair et simple signalant que le g√©rant doit g√©rer la suite ; le WhatsApp devra clairement le signaler au g√©rant  \n- Retourne uniquement l‚Äôobjet JSON demand√©, sans introduction ni conclusion\n\n---\n\nüü¢ Format de sortie attendu :  \nUniquement un JSON valide avec les quatre champs ci-dessus.\n`;\n\nreturn [{ json: { prompt } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -260,
        -100
      ],
      "id": "171a4894-07ad-416e-b2fe-47332edec2e9",
      "name": "Add prompt",
      "retryOnFail": true,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\n// R√©cup√©rer la cha√Æne JSON dans content (string avec √©chappements)\nconst rawContent = items[0].json.message.content;\n\n// Parse le contenu JSON (c'est une cha√Æne JSON dans la cha√Æne)\nlet parsed;\ntry {\n  parsed = JSON.parse(rawContent);\n} catch (e) {\n  throw new Error(\"Impossible de parser le JSON dans message.content : \" + e.message);\n}\n\n// Retourner un item avec les propri√©t√©s extraites\nreturn [{\n  json: {\n    email: parsed.email,\n    message: parsed.message,\n    subject: parsed.subject,\n    whatsapp: parsed.whatsapp,\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        280,
        -100
      ],
      "id": "813a2665-b835-415d-88d1-27b7f1b0e8a5",
      "name": "Clean output"
    },
    {
      "parameters": {
        "sendTo": "={{ $json.email }}",
        "subject": "Accus√© de r√©ception",
        "emailType": "text",
        "message": "Votre email a bien √©t√© re√ßu et sera trait√© au plus vite.\n\nCordialement,",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        540,
        -300
      ],
      "id": "3400cd3e-62e3-4bca-b0b4-b2342ddeaef3",
      "name": "Send received confirmation",
      "webhookId": "3d05349d-f294-4671-bd57-6b6c6548b5ed",
      "credentials": {
        "gmailOAuth2": {
          "id": "iwICIT10mcOTvPzn",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "resource": "draft",
        "subject": "={{ $json.subject }}",
        "message": "={{ $json.message }}",
        "options": {
          "sendTo": "={{ $json.email }}"
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        540,
        100
      ],
      "id": "a7bb1996-6c0e-4f61-ba79-ae4ea35624af",
      "name": "Create Draft",
      "webhookId": "41acf285-95d3-4940-824f-a1e0bef943b9",
      "retryOnFail": true,
      "credentials": {
        "gmailOAuth2": {
          "id": "iwICIT10mcOTvPzn",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Get the email and avoid wrong cases\n",
        "height": 920,
        "width": 960,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1940,
        -380
      ],
      "id": "8e36e99b-69b9-4c9b-9418-935815f3aaba",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Receive other informations to complete the email",
        "height": 920,
        "width": 860,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -980,
        -380
      ],
      "id": "9cb94ac0-b62b-496c-bbc6-8894faccbad0",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Answer and report of what has been done",
        "height": 920,
        "width": 880,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -120,
        -380
      ],
      "id": "b1ed715f-ddf5-4211-ac33-f1a9152d059f",
      "name": "Sticky Note2"
    }
  ],
  "pinData": {},
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "If empty",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download emergency words": {
      "main": [
        [
          {
            "node": "Extract from Emergency",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Rules": {
      "main": [
        [
          {
            "node": "Extract from Rules",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Emergency": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Add prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If resend by me": {
      "main": [
        [
          {
            "node": "Email cannot be process",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mark Email as Read",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mark Email as Read": {
      "main": [
        [
          {
            "node": "Download Rules",
            "type": "main",
            "index": 0
          },
          {
            "node": "Download emergency words",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If empty": {
      "main": [
        [
          {
            "node": "Mark Email as Read when empty",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If resend by me",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Rules": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Clean output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add prompt": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean output": {
      "main": [
        [
          {
            "node": "Create Draft",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send received confirmation",
            "type": "main",
            "index": 0
          },
          {
            "node": "Twilio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send received confirmation": {
      "main": [
        []
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "bf82df3a-1791-40a0-82cb-e07ab0d90d6d",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "f39c2b98b19709ed534274ab9768731d62442a7dc526f6403364b9ac386e2120"
  },
  "id": "Fz3Wf0sWjV7S3P4o",
  "tags": []
}